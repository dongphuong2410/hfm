/**
addr_t OBJECT_HEADER_CREATOR_INFO_SIZE;
  * @file constants.h
  * @author phuong.do
  * @date 2017-06-28
  * @brief Define constants
  */

#ifndef __HFM_MONITOR_CONSTANTS_H__
#define __HFM_MONITOR_CONSTANTS_H__

#define STATUS_SUCCESS 0
#define EX_FAST_REF_MASK 7
#define HANDLE_MULTIPLIER 4
#define BIT32 0
#define BIT64 1
#define PM2BIT(pm) ((pm == VMI_PM_IA32E) ? BIT64 : BIT32)
#define WIN7_TYPEINDEX_LAST 44
#define NT_SUCCESS(status)  ((status) >= 0 && (status) <= 0x7FFFFFFF)

#define OB_INFOMASK_PROCESS_INFO        0x10
#define OB_INFOMASK_QUOTA               0x08
#define OB_INFOMASK_HANDLE              0x04
#define OB_INFOMASK_NAME                0x02
#define OB_INFOMASK_CREATOR_INFO        0x01

#include "rekall.h"


enum {
    FILE_CREATED = 0,
    FILE_OPENED,
    FILE_OVERWRITTEN,
    FILE_SUPERSEDED,
    FILE_EXISTS,
    FILE_DOES_NOT_EXIST
};

enum {
    FILE_DIRECTORY_INFORMATION = 1,
    FILE_FULL_DIRECTORY_INFORMATION,
    FILE_BOTH_DIRECTORY_INFORMATION,
    FILE_BASIC_INFORMATION,
    FILE_STANDARD_INFORMATION,
    FILE_INTERNAL_INFORMATION,
    FILE_EA_INFORMATION,
    FILE_ACCESS_INFORMATION,
    FILE_NAME_INFORMATION,
    FILE_RENAME_INFORMATION,
    FILE_LINK_INFORMATION,
    FILE_NAMES_INFORMATION,
    FILE_DISPOSITION_INFORMATION,
    FILE_POSITION_INFORMATION,
    FILE_FULL_EA_INFORMATION,
    FILE_MODE_INFORMATION
};

typedef enum {
    OBJECT_TYPE_UNKNOWN = 0,
    OBJECT_TYPE_DIRECTORY,
    OBJECT_TYPE_SYMBOLIC_LINK
} object_t;
#endif
